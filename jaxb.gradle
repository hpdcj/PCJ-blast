configurations {
    jaxb
}

repositories {
    mavenCentral()
}

dependencies {
    jaxb 'com.sun.xml.bind:jaxb-core:2.2.11'
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.11'
    jaxb 'com.sun.xml.bind:jaxb-impl:2.2.11'

    jaxb "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    jaxb "org.glassfish.jaxb:jaxb-runtime:2.3.2"
}

task jaxb {
    ext.packageName = "jaxb.generated";
    doLast {
        def outputDir = outputs.files.find { file ->  !file.isFile() }
        outputDir.exists() || outputDir.mkdirs()
        
        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)
        ant.outputDir=outputDir

        inputs.files.each { input ->
            def fileName = input.toString()
            def language

            switch (fileName.substring(fileName.lastIndexOf(".")).toLowerCase()) {
                case ".dtd":
                    language = "DTD"
                    break
                case ".wsdl":
                    language = "WSDL"
                    break
                case ".xsd":
                default:
                    language = "XMLSCHEMA"
            }
            ant.xjc(
                schema: fileName,
                language : language,
                package: packageName,
                destdir: '${outputDir}',
            )
        }
    }
}